//Kenneth Fernandez "graphics prototype" for checkers 
//4/18/15 4:20 PM graphics
//4/25/15 3:10 PM king_me game_on game_over
#include <iostream>
using namespace std; 

bool game_on = true;

void display_board(char board[8][8]); //every outside function has to be passed a board array 
void king_me(char board [8][8]);
void game_over(char board [8][8]);

int main()
{	
	char board[8][8] =									//	An 2D array holding each Location, Color, and Type:
		{												//		
			{ ' ', 'b', ' ', 'b', ' ', 'b', ' ', 'b' },	//		
			{ 'b', ' ', 'b', ' ', 'b', ' ', 'b', ' ' },	//	Location is the array board [ii][jj]
			{ ' ', 'b', ' ', 'b', ' ', 'b', ' ', 'b' },	//		
			{ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' },	//	Color is either r or b (red or black)
			{ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' },	//			
			{ 'r', ' ', 'r', ' ', 'r', ' ', 'r', ' ' },	//	Type is either lowercase or uppercase
			{ ' ', 'r', ' ', 'r', ' ', 'r', ' ', 'r' },	//		Lowercase for unkinged (r and b)
			{ 'r', ' ', 'r', ' ', 'r', ' ', 'r', ' ' },	//		Uppercase for kinged (R and B)
		};												//			
	
	while (game_on == true)
	{
		display_board(board);//	Outside display function called	
		king_me(board);// checks to see if pieces are kinged
		game_over(board);// determines the piece number left and changes the game_on to true or false MUST BE LAST IN THE WHILE LOOP!!
	}
	

	system("PAUSE");
	return 0;
}




void display_board(char b[8][8])//Outside display function
{
	cout << "  ==================================================================================\n\n\n";
	cout << "        0         1         2         3         4         5         6         7     \n";
	cout << "   _________________________________________________________________________________\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << " A |    " << b[0][0] << "    |    " << b[0][1] << "    |    " << b[0][2] << "    |    " << b[0][3] << "    |    " << b[0][4] << "    |    " << b[0][5] << "    |    " << b[0][6] << "    |    " << b[0][7] << "    |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |_________|_________|_________|_________|_________|_________|_________|_________|\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << " B |    " << b[1][0] << "    |    " << b[1][1] << "    |    " << b[1][2] << "    |    " << b[1][3] << "    |    " << b[1][4] << "    |    " << b[1][5] << "    |    " << b[1][6] << "    |    " << b[1][7] << "    |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |_________|_________|_________|_________|_________|_________|_________|_________|\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << " C |    " << b[2][0] << "    |    " << b[2][1] << "    |    " << b[2][2] << "    |    " << b[2][3] << "    |    " << b[2][4] << "    |    " << b[2][5] << "    |    " << b[2][6] << "    |    " << b[2][7] << "    |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |_________|_________|_________|_________|_________|_________|_________|_________|\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << " D |    " << b[3][0] << "    |    " << b[3][1] << "    |    " << b[3][2] << "    |    " << b[3][3] << "    |    " << b[3][4] << "    |    " << b[3][5] << "    |    " << b[3][6] << "    |    " << b[3][7] << "    |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |_________|_________|_________|_________|_________|_________|_________|_________|\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << " E |    " << b[4][0] << "    |    " << b[4][1] << "    |    " << b[4][2] << "    |    " << b[4][3] << "    |    " << b[4][4] << "    |    " << b[4][5] << "    |    " << b[4][6] << "    |    " << b[4][7] << "    |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |_________|_________|_________|_________|_________|_________|_________|_________|\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << " F |    " << b[5][0] << "    |    " << b[5][1] << "    |    " << b[5][2] << "    |    " << b[5][3] << "    |    " << b[5][4] << "    |    " << b[5][5] << "    |    " << b[5][6] << "    |    " << b[5][7] << "    |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |_________|_________|_________|_________|_________|_________|_________|_________|\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << " G |    " << b[6][0] << "    |    " << b[6][1] << "    |    " << b[6][2] << "    |    " << b[6][3] << "    |    " << b[6][4] << "    |    " << b[6][5] << "    |    " << b[6][6] << "    |    " << b[6][7] << "    |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |_________|_________|_________|_________|_________|_________|_________|_________|\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << " H |    " << b[7][0] << "    |    " << b[7][1] << "    |    " << b[7][2] << "    |    " << b[7][3] << "    |    " << b[7][4] << "    |    " << b[7][5] << "    |    " << b[7][6] << "    |    " << b[7][7] << "    |\n";
	cout << "   |         |         |         |         |         |         |         |         |\n";
	cout << "   |_________|_________|_________|_________|_________|_________|_________|_________|\n";
}

void king_me(char b[8][8])// turns pieces into kings if conditions are met
{
	for (int ii = 0; ii < 8; ++ii)
	{
		if (b[0][ii] == 'r')
		{
			b[0][ii] = 'R';
		}
		else if (b[7][ii] == 'b')
		{
			b[7][ii] = 'B';
		}
	}
}


void game_over(char b[8][8]) // runs every turn to check the number of pieces left
{
	int piecesLeft = 0; // starts a counter 

	for (int ii = 0; ii < 8; ++ii)
	{
		for (int jj = 0; jj < 8; ++jj)
		{
			if (b[ii][jj] != ' ')
			{
				piecesLeft++;
			}
		}
	}

	if (piecesLeft == 1)
	{
		game_on = true; // continue running
	}
	else if (piecesLeft > 1)
	{
		game_on = false; // game over
	}
}
